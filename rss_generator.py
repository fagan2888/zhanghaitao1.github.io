# -*-coding: utf-8 -*-
# Python 3.6
# Author:Zhang Haitao
# Email:13163385579@163.com
# Time:2019-12-06  20:58
# Name:zht-rss_generator.py

import os
import pandas as pd
import datetime
from rfeed import *

# DIRECTORY=r'D:\zht\database\projects\rss_zotero_python'


def get_title(x):
    if "Annual Review of Economics" in x:
        return 'Annual Review of Economics'
    elif 'Annual Review of Financial Economics' in x:
        return 'Annual Review of Financial Economics'
    else:
        return x

def get_acronym(x):
    acronym=None
    if 'Journal of Banking & Finance' in x:
        acronym='JBF'
    elif 'Management Science' in x:
        acronym='MS'
    elif 'Journal of Financial Economics' in x:
        acronym='JFE'
    elif 'Journal of Finance' in x:
        acronym='JF'
    elif 'Journal of Financial and Quantitative Analysis' in x:
        acronym='JFQA'
    elif 'Journal of Portfolio Management' in x:
        acronym='JPM'
    elif 'Review of Finance' in x:
        acronym='RF'
    elif 'Journal of Economic Literature' in x:
        acronym='JEL'
    elif 'Review of Financial Studies' in x:
        acronym='RFS'
    elif 'Journal of Economic Literature' in x:
        acronym='JEL'
    elif 'Journal of Economic Perspectives' in x:
        acronym='JEP'
    elif 'Annual Review of Financial Economics' in x:
        acronym='ARFE'
    elif 'Annual Review of Economics' in x:
        acronym='ARE'
    else:
        raise ValueError
    return acronym




def get_all_rss(chunksize=200):
    df = pd.read_csv('2010-2019oct.csv') #trick: this csv is imported from zotero
    df = df.sort_values('Publication Year', ascending=False)
    df['title'] = df['Publication Title'].map(get_title)
    df['acronym']=df['Publication Title'].map(get_acronym)

    for i,acronym in enumerate(df['acronym'].unique()):
        sub=df[df['acronym']==acronym]

        for i in range(sub.shape[0]//chunksize+1):
            start=i*chunksize
            end=(i+1)*chunksize
            items=[]
            for _,row in sub[start:end].iterrows():
                if pd.isnull(row['Date']):
                    pubdate=None
                else:
                    pubdate=datetime.datetime.strptime(pd.to_datetime(row['Date']).strftime('%Y%m%d'), "%Y%m%d")

                item=Item(
                    title=row['Title'],
                    link="http://www.example.com/articles/1",
                    description=str(row['Author'])+'\n'+str(row['Abstract Note']),
                    author=row['Author'],
                    guid = Guid("http://www.example.com/articles/1"),
                    # pubDate = datetime.datetime(2014, 12, 29, 10, 00),
                    pubDate=pubdate
                )
                items.append(item)

            feed = Feed(
                title = f'{acronym}{i}',
                link = "http://www.example.com/rss",
                description = "This is the feed for items from my zotero.",
                language = "en-US",
                lastBuildDate = datetime.datetime.now(),
                items = items)

            with open(f'{acronym}{i}.xml','w') as f:
                f.write(feed.rss())


def get_opml():
    fns=os.listdir(os.getcwd())
    titles=[fn[:-4] for fn in fns if fn.endswith('.xml')]

    # titles = df['title'].unique()
    ss=[]
    for title in titles:
        xmlurl=f'https://zhanghaitao1.github.io/{title}.xml'
        s=f'<outline title="{title}" text="{title}" htmlUrl="https://www.ssrn.com" xmlUrl="{xmlurl}" type="rss"/>'
        ss.append(s)

    _str='\n\t\t'.join(ss)

    opml=f'''
<?xml version="1.0" encoding="UTF-8"?>
<opml>
    <head>
        <title>subscriptions</title>
        <dateCreated>10/28/2019, 11:18:12 PM</dateCreated>
        <ownerName>generated by fatecore irreader</ownerName>
    </head>
    <body>
        {_str}
    </body>
</opml>
    '''
    with open('opml.opml','w') as f:
        f.write(opml)



def print_all_rss():
    df = pd.read_csv('2010-2019oct.csv') #trick: this csv is imported from zotero
    df = df.sort_values('Publication Year', ascending=False)
    df['title'] = df['Publication Title'].map(get_title)
    titles = df['title'].unique()
    for title in titles:
        xmlurl=f'https://zhanghaitao1.github.io/{title}.xml'
        print('\n')
        print(xmlurl)

if __name__ == '__main__':
    get_all_rss()
    get_opml()

    # print_all_rss()



